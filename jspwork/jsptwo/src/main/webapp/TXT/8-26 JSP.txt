아파치설치 c알아서풀기
conf폴더 
server.xml
<Service name="Catalina"> 찾아서 
<Connector port="8090" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443"
               maxParameterCount="1000"
               />

주석처리 안된 Connector port를 찾아서 포트번호 8090으로 변경

bin폴더 start.bat 실행
브라우저에 http://localhost:8090/ 아파치화면 나오면 정살
bin폴더 shutdown.bat로 cmd창 끄기 
	OR
(cd C:\apache-tomcat-9.0.93\bin
startup.bat)

아파치톰캣 압축파일(복사본)삭제 - 프로그램 충돌 가능성 있음 
c드라이브에 jspwork 폴더 생성

설치순서: jdk => 환경변수설정
데이터베이스 : oracle => 사용자계정 및 권한 설정
웹어플리케이션서버 설치(WAS : Web Application Server : 아파치 톰캣)
=> 포트번호 변경
이클립스(IDE : 통합개발환경 = 통합개발도구) => 환경설정

이클립스 환경설정 순서
1. Window -> Preferences -> Java -> Installed JREs - 17버전 삭제 - add - jdk-11 -apply -apply  and close
2. Window -> Preferences -> Server -> runtime - add - 아파치 - 9버전선택 - Create 반드시 체크 -넥스트 - 브라우저 클릭  - 아파치 톰캣 폴터 선택 - jre 버전 - jdk-11변경 - 피니시 - apply and close 
3. Window -> Preferences -> General -> workspace인코딩 설정 및 web browers설정 - 익스터널 - 크롬
워크 스페이스 아더 - utf8 
4. Window -> Preferences -> Web -> html, css, jsp 인코딩 설정 - utf8

jsp : Java Server Page
자바를 이용해서 데이터베이스 서버와 연결할 수 있는 기능을 제공하는 페이지 기술

Servlet Spec - 4.0
JSP Spec - 2.0
EL Spec - 3.0
WebSocket Spec - 1.1
Authentication Spec (JASPIC)	 - 1.1
Apache Tomcat Version - 9.0.93

jspfirst : 프로젝트명  = 애플리케이션명 = 컨텍스트
도메인 다음에 가장 먼저 인식하는 root 경로

프로토콜종류 :http://ip또는도메인:포트번호/컨텍스트(root경로)/경로?쿼리문자열

http://localhos:8090/jspfirst/
http://127.0.0.1:8090/

다이나믹웹프로젝트 -> 이름설정 -> 넥스트 ->  넥스트 -> generate체크 후 -> finish
main폴더 - java
webapp폴더 - .html , .css , .자바스크립트 ,. jsp, 이미지 등등
web-inf - 보안폴더 (외부접근안됨)
WEB-INF - LIB폴더 - 라이브러리 보관폴더
conf폴더 -> web.xml -> 웹애플리케이션의 전반적인 설정을 관리하는 파일

WEBAPP 오른쪽클릭 후 jsp파일생성 -> 파일명 설정후 넥스트 -> finish

컨트롤 + f11  -> save -> finish

http://localhost:8090/jspfirst/hello.jsp

jsp 스크립트 태그들 : 자바 소스 코드를 기술할 수 있는 태그
jsp스크립트 태그들은 절대 중첩해서 사용 불가능하다.


1. 지시태그(Derection Tag)  : 페이지의 인코딩, 필요한 라이브러리 추가, 언어 설정등 페이지 전반적인 설정을 처리할 때
사용하는 태그임.
 <%@ 속성명="속성값" 속성명="속성값"     %>

2. 실행태그 (Scriptlet tag) : 페이지에서 실행할 소스코드가
기술되는 태그 = 자바파일에서 메소드 안에 기술되는 코드들과 동일함. (지역변수, 반복문, 조건문, 출력문(System.out.print~~,out.print~~~))
<% 실행코드들...; %>

3. 선언 태그 (declaration Tag) : 가장 먼저 인식하는 태그
 전역변수와 전역메소드를 선언하는 태그 => 자바파일에서 클래스 안에 기술되는 코드들과 동일함.
//멤버필드-변수, 객체, 상수
	public String str="하하하";
public void 메소드명([...]){ ... 지역변수, 반복문, 조건문, 출력문,리턴문}
전역변수 : 프로그램 끝날때까지 사용가능
<%! 전역변수선언, 전역메소드 선언(System.out.print~~~) %>

선언태그는 가장 먼저 컴파일된다.
선언태그만 전역

4. 표현 태그(Expression Tag) : body태그에 출력할 수 있는 출력문을 줄여놓은 태그임.
jsp 내장 객체 중 body태그에 출력을 할 수 있는 기능을 제공해주는 객체 : out
out.print("출력할 문자열 값"); => html형식으로 출력해줌.
<%=출력할 값   %> 안에 절대 세미콜론( ; )을 기술하면 안됨.

페이지 이동방식 :
리다이렉트(=리다이렉팅) : 데이터 전송을 할 수 없음. 페이지 이동이 이루어지
는 방식(url변경됨) 대표적인 리다이렉트 방식에 관련된 속성 (a태그의
href, form태그의 action, 자바스크립트의 location.href속성으로 이동
하는 방식 등)

포워드(=포워딩) : 데이터 전송을 할 수 있음. url변경이 없이 페이지
이동을 하는 방식. 서버단에서 forward방식으로 전송하는(이동하는)
방식(대표적인 포워딩 방식: 지시태그의 에러페이지 방식이나 jsp의
foward 속성으로 이동하는 방식 등)


서로 다른 페이지를 하나의 페이지로 연결하는 방법
1. include지시태그를 사용하는 방법 : 해당 파일의 소스
코드를 그대로 가져와서 붙여넣기 한 뒤에 같이 컴파일
을 한다.
2. jsp:include 액션태그를 사용하는 방법 : 해당 파일의
소스코드를 html형식으로 컴파일을 마친 후에 해당 코드를
붙여넣기한다.

jsp스크립트 태그 :
<%@: 지시태그 <%! : 선언태그 <% : 실행태그 <%= : 표현태그

=> java소스코드로 기술하는 스크립트 태그들

액션태그 : 객체 생성, getter, setter 메소드들을 쉽게 호출하여 연결해
사용하거나 페이지 이동, 페이지 연결, 파라미터 전달등의 기능을 사용할
때 이용하는 태그임.
jsp에서 제공하는 기본 스크립트 태그들의 기능을 조금 더 편하게
확장하여 자바 소스코드가 아닌 태그 형식으로 코드를 기술 할 수 있도록
나온 태그임. 동적인 기능을 부여할 때 사용함.
jsp기본 스크립트 태그 중 표현 태그를 이용하거나 EL(표현 언어)를 이용하여
속성값을 기술할수 있다.
형식 : <jsp:액션태그명 속성명 ="속성값"  ></jsp:액션태그명 속성명 = "속성값"> 또는
<jsp:액션태그명 속성명="속성값" />


클래스 파일 만들기
경로 : src/main/java
패키지명 : com.dto , com.dao
클래스명 : 
com.dto => MemberBean.java, Person.java
com.dao => Calculator.java

라이브러리 추가 및 파일을 만드는 순서
1. 필요한 라이브러리 추가를 제일 먼저 진행할 것
2. .java파일을 2번째로 만들 것
3. jsp, html, css, js파일 필요한 순서로 만들것
4. WEB-INF안에 있는 web.xml파일에 필요한 코드 기술할 것.



