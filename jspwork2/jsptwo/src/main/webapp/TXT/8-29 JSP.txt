application의 web.xml
프로젝트의 전반적인 설정을 처리할때 사용하는 파일

톰캣의 web.xml
만들어 놓은 모든 프로젝트의 설정을 담당하는 파일

파일업로드 : 반드시 파일을 업로드 하기 위한 라이브러리가 필요하다.
MultipartRequest

html에서 파일업로드 조건
form태그의 method ="post"
form태그의 enctype="multipart/form-data"
form태그 안에 input type="file"인 태그가 존재해야 한다.


1. cos.jar
(MultipartRequest 자료형을 통해 데이터를 분해아여 가져올 수 있다)
=> 업로드할 디렉토리가 존재하지 않으면 에러 발생
=> 여러 개의 파일을 하나의 name으로 같이 묶어서 전송한
   경우는 파일명을 각각 떼어낼 수 없다.
=> FilePolicy을 설정하면 동일한 이름의 파일(확장자까지 동일)
   의 이름을 자동으로 새이름으로 변경함. 이름 뒤에 숫자 1,2,3...등이
   붙음 (내가 원하는 새이름으로 지정하기가 어려움)
FilePolicy을 설정하지 않으면 나중의 파일로 덮어쓰기 됨.

2. commons-fileupload, commons-io
(DiskFileUpload 자료형을 통해 데이터를 분해하여 가져올 수 있다.)
=> 업로드할 디렉토리가 존재하지 않으면 자동으로 생성됨.
=> 여러 개의 파일을 하나의 name으로 같이 묶어서 전송하여도 이름을
   각각 분리하기가 쉽다.
=> FilePolicy정책을 설정하는 부분이 없다.
=> 내가 원하는 새 이름으로 변경하기가 쉽다.
=> 만약 새 이름으로 변경하는 로직이 없는 경우 동일한 이름을 가진 파일을
업로드 할 경우 에러 발생됨.

3. Part클래스 (라이브러리가 필요 없으며, 서블릿 3.0버전 이상한 사용가능.)
-반드시 톰캣의 context.xml의 Context태그의 설정과 Resource태그의 설정이
필요하다.
-경우에 따라 (필요한 경우) 톰캣의 server.xml 설정도 필요함.
-저장하려는 디렉토리 경로가 없는 경우에는 에러 발생됨.
-새 이름으로 파일을 변경하기 용이하며, 만약 변경하는 로직이 없는 경우 동일
한 파일의 이름을 업로드 할 때 나중의 파일로 덮어쓰기가 된다.
-request객체를 그대로 사용하여 데이터를 분해할 수 있다.